name: Cross-Platform Build

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Desired Release Version (e.g., v1.0.0)'
        required: true
        type: string
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        runtime: [win-x64, linux-x64]
        include:
          - os: ubuntu-latest
            runtime: linux-x64
          - os: windows-latest
            runtime: win-x64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore CommonUtilities/CommonUtilities.csproj

      - name: Clean project
        run: dotnet clean CommonUtilities/CommonUtilities.csproj

      - name: Publish library
        run: dotnet publish CommonUtilities/CommonUtilities.csproj --configuration Release --runtime ${{ matrix.runtime }} --self-contained false /p:UseAppHost=false -o ./publish/${{ matrix.os }}/CommonUtilities

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-build
          path: ./publish/${{ matrix.os }}/CommonUtilities
          overwrite: true

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download Ubuntu artifact
        uses: actions/download-artifact@v4
        with:
          name: ubuntu-latest-build
          path: ./downloaded-artifacts/ubuntu-latest-build

      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: windows-latest-build
          path: ./downloaded-artifacts/windows-latest-build

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'
        with:
          tag_name: ${{ github.event.inputs.release_version }}
          name: ${{ github.event.inputs.release_version }}
          files: ./downloaded-artifacts/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
