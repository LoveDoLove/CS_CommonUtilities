name: Cross-Platform Build

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Desired Release Version (e.g., v1.0.0)'
        required: true
        type: string
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            arch: x64
            runtime: win-x64
          - os: windows-latest
            arch: x86
            runtime: win-x86

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore CommonUtilities/CommonUtilities.csproj

      - name: Clean project
        run: dotnet clean CommonUtilities/CommonUtilities.csproj

      - name: Publish library
        run: dotnet publish CommonUtilities/CommonUtilities.csproj --configuration context7 --runtime ${{ matrix.runtime }} --self-contained false /p:UseAppHost=false -o ./publish/${{ matrix.os }}-${{ matrix.arch }}/CommonUtilities

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-${{ matrix.arch }}-build
          path: ./publish/${{ matrix.os }}-${{ matrix.arch }}/CommonUtilities
          overwrite: true

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download Windows x64 artifact
        uses: actions/download-artifact@v4
        with:
          name: windows-latest-x64-build # Match new artifact name
          path: ./downloaded-artifacts/windows-latest-x64-build
      - name: Download Windows x86 artifact
        uses: actions/download-artifact@v4
        with:
          name: windows-latest-x86-build # Match new artifact name
          path: ./downloaded-artifacts/windows-latest-x86-build

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'
        with:
          tag_name: ${{ github.event.inputs.release_version }}
          name: ${{ github.event.inputs.release_version }}
          files: ./downloaded-artifacts/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
